openapi: 3.0.0
info:
  title: Products API
  version: 1.0.0
  description: API endpoints for product management

paths:
  /api/products:
    get:
      tags:
        - Products
      summary: Get all products
      description: Returns a paginated list of products with optional filters
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of products per page
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: sort
          schema:
            type: string
            enum: [asc, desc]
          description: Sort by price (ascending or descending)
        - in: query
          name: query
          schema:
            type: string
          description: Filter products by search term
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalPages:
                    type: integer
                  prevPage:
                    type: integer
                  nextPage:
                    type: integer
                  page:
                    type: integer
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevLink:
                    type: string
                  nextLink:
                    type: string
    
    post:
      tags:
        - Products
      summary: Create new product
      description: Create a new product (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
          
  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Returns a single product by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    
    put:
      tags:
        - Products
      summary: Update product
      description: Update an existing product (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '404':
          description: Product not found
    
    delete:
      tags:
        - Products
      summary: Delete product
      description: Delete an existing product (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Product deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Product not found

components:
  schemas:
    Product:
      allOf:
        - $ref: '#/components/schemas/ProductInput'
        - type: object
          properties:
            _id:
              type: string
              description: Product unique identifier
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT